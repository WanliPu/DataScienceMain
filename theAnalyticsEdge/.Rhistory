else{
sum = 0
}
return(sum)
}
print ( log_gamma_recursive ( 5 ))
# problem #4 (Sum of Log Gamma)
sum_log_gamma_loop = function(n){
sum = 0;
while(n>0){
sum = sum+log_gamma_loop(n)
n=n-1
}
return(sum)
}
sum_log_gamma_recursive = function(n){
sum = 0;
while(n>0){
sum = sum+log_gamma_recursive(n)
n=n-1
}
return(sum)
}
sum_lgamma = function(n){
sum = 0;
while(n>0){
sum = sum+lgamma(n)
n=n-1
}
return(sum)
}
print ( sum_log_gamma_loop ( 5 ))
print ( sum_log_gamma_recursive ( 5 ))
print ( sum_lgamma ( 5 ))
options(expressions=500000)
# problem #5 Compare Results to Built-in R Function
n = 500
#sum_lgamma(n)
system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
system.time(sum_log_gamma_recursive(n))[[1]]
##
numbers = seq(300, 3000, by = 100)
sum_lgamma_time = numbers
sum_log_gamma_loop_time = numbers
sum_log_gamma_recursive_time = numbers
count = 1
for(n in numbers){
sum_lgamma_time[count] = system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
sum_log_gamma_loop_time[count] = system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
sum_log_gamma_recursive_time[count] = system.time(sum_log_gamma_recursive(n))[[1]]
count = count + 1
}
df <- data.frame(numbers, sum_lgamma_time, sum_log_gamma_loop_time, sum_log_gamma_recursive_time)
require(ggplot2)
#ggplot(df) + geom_line(aes(x=numbers, y=sum_lgamma_time, colour=variable)) +
#  scale_colour_manual(values=c("red","green","blue"))
# ggplot(df, aes(x = numbers, y = values, colour = variables)) +
#   geom_line() +
#   ylab(label = "Time") +
#   xlab(label = "Number (N)") +
#   scale_colour_manual(values=c("red","green","blue"))
#   # basic graphical object
#   # geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
#   # geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
#   # geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") +
#
#   # legend("topleft", c("x", "y", "z"))
#   #scale_color_manual(labels = c("T999", "T888", "xxx")) #+
#   #scale_colour_manual(values=c("red","green","blue"))
ggplot(df, aes(numbers)) +                    # basic graphical object
geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") +
ylab(label = "Time (sec)") +
xlab(label = "Number (N)")
numbers = seq(50, 3000, by = 50)
sum_lgamma_time = numbers
sum_log_gamma_loop_time = numbers
sum_log_gamma_recursive_time = numbers
count = 1
for(n in numbers){
sum_lgamma_time[count] = system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
sum_log_gamma_loop_time[count] = system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
sum_log_gamma_recursive_time[count] = system.time(sum_log_gamma_recursive(n))[[1]]
count = count + 1
}
df <- data.frame(numbers, sum_lgamma_time, sum_log_gamma_loop_time, sum_log_gamma_recursive_time)
require(ggplot2)
#ggplot(df) + geom_line(aes(x=numbers, y=sum_lgamma_time, colour=variable)) +
#  scale_colour_manual(values=c("red","green","blue"))
# ggplot(df, aes(x = numbers, y = values, colour = variables)) +
#   geom_line() +
#   ylab(label = "Time") +
#   xlab(label = "Number (N)") +
#   scale_colour_manual(values=c("red","green","blue"))
#   # basic graphical object
#   # geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
#   # geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
#   # geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") +
#
#   # legend("topleft", c("x", "y", "z"))
#   #scale_color_manual(labels = c("T999", "T888", "xxx")) #+
#   #scale_colour_manual(values=c("red","green","blue"))
ggplot(df, aes(numbers)) +                    # basic graphical object
geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") +
ylab(label = "Time (sec)") +
xlab(label = "Number (N)")
log_gamma_loop = function(n){
sum = 0;
while(n - 1 > 1){
sum = sum + log(n-1)
n =  n - 1
}
return(sum)
}
print ( log_gamma_loop ( 5 ))
# problem #3 (Recursive Loop)
log_gamma_recursive = function(n){
sum = 0;
if(n - 1 > 1){
sum = log(n-1) + log_gamma_recursive(n-1)
}
else{
sum = 0
}
return(sum)
}
print ( log_gamma_recursive ( 5 ))
# problem #4 (Sum of Log Gamma)
sum_log_gamma_loop = function(n){
sum = 0;
while(n>0){
sum = sum+log_gamma_loop(n)
n=n-1
}
return(sum)
}
sum_log_gamma_recursive = function(n){
sum = 0;
while(n>0){
sum = sum+log_gamma_recursive(n)
n=n-1
}
return(sum)
}
sum_lgamma = function(n){
sum = 0;
while(n>0){
sum = sum+lgamma(n)
n=n-1
}
return(sum)
}
print ( sum_log_gamma_loop ( 5 ))
print ( sum_log_gamma_recursive ( 5 ))
print ( sum_lgamma ( 5 ))
options(expressions=500000)
# problem #5 Compare Results to Built-in R Function
n = 500
#sum_lgamma(n)
system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
system.time(sum_log_gamma_recursive(n))[[1]]
##
numbers = seq(100, 3000, by = 100)
sum_lgamma_time = numbers
sum_log_gamma_loop_time = numbers
sum_log_gamma_recursive_time = numbers
count = 1
for(n in numbers){
sum_lgamma_time[count] = system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
sum_log_gamma_loop_time[count] = system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
sum_log_gamma_recursive_time[count] = system.time(sum_log_gamma_recursive(n))[[1]]
count = count + 1
}
df <- data.frame(numbers, sum_lgamma_time, sum_log_gamma_loop_time, sum_log_gamma_recursive_time)
require(ggplot2)
#ggplot(df) + geom_line(aes(x=numbers, y=sum_lgamma_time, colour=variable)) +
#  scale_colour_manual(values=c("red","green","blue"))
# ggplot(df, aes(x = numbers, y = values, colour = variables)) +
#   geom_line() +
#   ylab(label = "Time") +
#   xlab(label = "Number (N)") +
#   scale_colour_manual(values=c("red","green","blue"))
#   # basic graphical object
#   # geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
#   # geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
#   # geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") +
#
#   # legend("topleft", c("x", "y", "z"))
#   #scale_color_manual(labels = c("T999", "T888", "xxx")) #+
#   #scale_colour_manual(values=c("red","green","blue"))
ggplot(df, aes(numbers)) +                    # basic graphical object
geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") +
ylab(label = "Time (sec)") +
xlab(label = "Number (N)")
numbers = seq(100, 3500, by = 100)
sum_lgamma_time = numbers
sum_log_gamma_loop_time = numbers
sum_log_gamma_recursive_time = numbers
count = 1
for(n in numbers){
sum_lgamma_time[count] = system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
sum_log_gamma_loop_time[count] = system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
sum_log_gamma_recursive_time[count] = system.time(sum_log_gamma_recursive(n))[[1]]
count = count + 1
}
df <- data.frame(numbers, sum_lgamma_time, sum_log_gamma_loop_time, sum_log_gamma_recursive_time)
require(ggplot2)
#ggplot(df) + geom_line(aes(x=numbers, y=sum_lgamma_time, colour=variable)) +
#  scale_colour_manual(values=c("red","green","blue"))
# ggplot(df, aes(x = numbers, y = values, colour = variables)) +
#   geom_line() +
#   ylab(label = "Time") +
#   xlab(label = "Number (N)") +
#   scale_colour_manual(values=c("red","green","blue"))
#   # basic graphical object
#   # geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
#   # geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
#   # geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") +
#
#   # legend("topleft", c("x", "y", "z"))
#   #scale_color_manual(labels = c("T999", "T888", "xxx")) #+
#   #scale_colour_manual(values=c("red","green","blue"))
ggplot(df, aes(numbers)) +                    # basic graphical object
geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") +
ylab(label = "Time (sec)") +
xlab(label = "Number (N)")
# problem #2 (Iterative Loop)
log_gamma_loop = function(n){
sum = 0;
while(n - 1 > 1){
sum = sum + log(n-1)
n =  n - 1
}
return(sum)
}
print ( log_gamma_loop ( 5 ))
# problem #3 (Recursive Loop)
log_gamma_recursive = function(n){
sum = 0;
if(n - 1 > 1){
sum = log(n-1) + log_gamma_recursive(n-1)
}
else{
sum = 0
}
return(sum)
}
print ( log_gamma_recursive ( 5 ))
# problem #4 (Sum of Log Gamma)
sum_log_gamma_loop = function(n){
sum = 0;
while(n>0){
sum = sum+log_gamma_loop(n)
n=n-1
}
return(sum)
}
sum_log_gamma_recursive = function(n){
sum = 0;
while(n>0){
sum = sum+log_gamma_recursive(n)
n=n-1
}
return(sum)
}
sum_lgamma = function(n){
sum = 0;
while(n>0){
sum = sum+lgamma(n)
n=n-1
}
return(sum)
}
print ( sum_log_gamma_loop ( 5 ))
print ( sum_log_gamma_recursive ( 5 ))
print ( sum_lgamma ( 5 ))
options(expressions=5000000)
# problem #5 Compare Results to Built-in R Function
n = 5
#sum_lgamma(n)
system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
system.time(sum_log_gamma_recursive(n))[[1]]
##
numbers = seq(100, 5000, by = 100)
sum_lgamma_time = numbers
sum_log_gamma_loop_time = numbers
sum_log_gamma_recursive_time = numbers
count = 1
for(n in numbers){
sum_lgamma_time[count] = system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
sum_log_gamma_loop_time[count] = system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
sum_log_gamma_recursive_time[count] = system.time(sum_log_gamma_recursive(n))[[1]]
count = count + 1
}
# problem #2 (Iterative Loop)
log_gamma_loop = function(n){
sum = 0;
while(n - 1 > 1){
sum = sum + log(n-1)
n =  n - 1
}
return(sum)
}
print ( log_gamma_loop ( 5 ))
# problem #3 (Recursive Loop)
log_gamma_recursive = function(n){
sum = 0;
if(n - 1 > 1){
sum = log(n-1) + log_gamma_recursive(n-1)
}
else{
sum = 0
}
return(sum)
}
print ( log_gamma_recursive ( 5 ))
# problem #4 (Sum of Log Gamma)
sum_log_gamma_loop = function(n){
sum = 0;
while(n>0){
sum = sum+log_gamma_loop(n)
n=n-1
}
return(sum)
}
sum_log_gamma_recursive = function(n){
sum = 0;
while(n>0){
sum = sum+log_gamma_recursive(n)
n=n-1
}
return(sum)
}
sum_lgamma = function(n){
sum = 0;
while(n>0){
sum = sum+lgamma(n)
n=n-1
}
return(sum)
}
print ( sum_log_gamma_loop ( 5 ))
print ( sum_log_gamma_recursive ( 5 ))
print ( sum_lgamma ( 5 ))
options(expressions=500000)
# problem #5 Compare Results to Built-in R Function
n = 5
#sum_lgamma(n)
system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
system.time(sum_log_gamma_recursive(n))[[1]]
##
numbers = seq(100, 3000, by = 100)
sum_lgamma_time = numbers
sum_log_gamma_loop_time = numbers
sum_log_gamma_recursive_time = numbers
count = 1
for(n in numbers){
sum_lgamma_time[count] = system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
sum_log_gamma_loop_time[count] = system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
sum_log_gamma_recursive_time[count] = system.time(sum_log_gamma_recursive(n))[[1]]
count = count + 1
}
df <- data.frame(numbers, sum_lgamma_time, sum_log_gamma_loop_time, sum_log_gamma_recursive_time)
require(ggplot2)
#ggplot(df) + geom_line(aes(x=numbers, y=sum_lgamma_time, colour=variable)) +
#  scale_colour_manual(values=c("red","green","blue"))
# ggplot(df, aes(x = numbers, y = values, colour = variables)) +
#   geom_line() +
#   ylab(label = "Time") +
#   xlab(label = "Number (N)") +
#   scale_colour_manual(values=c("red","green","blue"))
#   # basic graphical object
#   # geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
#   # geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
#   # geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") +
#
#   # legend("topleft", c("x", "y", "z"))
#   #scale_color_manual(labels = c("T999", "T888", "xxx")) #+
#   #scale_colour_manual(values=c("red","green","blue"))
ggplot(df, aes(numbers)) +                    # basic graphical object
geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") +
ylab(label = "Time (sec)") +
xlab(label = "Number (N)")
log_gamma_loop = function(n){
sum = 0;
while(n - 1 > 1){
sum = sum + log(n-1)
n =  n - 1
}
return(sum)
}
print ( log_gamma_loop ( 5 ))
log_gamma_recursive = function(n){
sum = 0;
if(n - 1 > 1){
sum = log(n-1) + log_gamma_recursive(n-1)
}
else{
sum = 0
}
return(sum)
}
print ( log_gamma_recursive ( 5 ))
sum_log_gamma_loop = function(n){
sum = 0;
while(n>0){
sum = sum+log_gamma_loop(n)
n=n-1
}
return(sum)
}
sum_log_gamma_recursive = function(n){
sum = 0;
while(n>0){
sum = sum+log_gamma_recursive(n)
n=n-1
}
return(sum)
}
sum_lgamma = function(n){
sum = 0;
while(n>0){
sum = sum+lgamma(n)
n=n-1
}
return(sum)
}
print ( sum_log_gamma_loop ( 5 ))
print ( sum_log_gamma_recursive ( 5 ))
print ( sum_lgamma ( 5 ))
n = 5
#sum_lgamma(n)
system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
system.time(sum_log_gamma_recursive(n))[[1]]
n = 50
#sum_lgamma(n)
system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
system.time(sum_log_gamma_recursive(n))[[1]]
n = 500
#sum_lgamma(n)
system.time(sum_lgamma(n))[[1]]
#sum_log_gamma_loop(n)
system.time(sum_log_gamma_loop(n))[[1]]
#sum_log_gamma_recursive(n)
system.time(sum_log_gamma_recursive(n))[[1]]
n = 500
system.time(sum_lgamma(n))[[1]]
system.time(sum_log_gamma_loop(n))[[1]]
system.time(sum_log_gamma_recursive(n))[[1]]
n = 500
system.time(sum_lgamma(n))[[1]]
system.time(sum_log_gamma_loop(n))[[1]]
system.time(sum_log_gamma_recursive(n))[[1]]
options(expressions=500000)
numbers = seq(100, 3000, by = 100)
sum_lgamma_time = numbers
sum_log_gamma_loop_time = numbers
sum_log_gamma_recursive_time = numbers
count = 1
for(n in numbers){
sum_lgamma_time[count] = system.time(sum_lgamma(n))[[1]]
sum_log_gamma_loop_time[count] = system.time(sum_log_gamma_loop(n))[[1]]
sum_log_gamma_recursive_time[count] = system.time(sum_log_gamma_recursive(n))[[1]]
count = count + 1
}
df <- data.frame(numbers, sum_lgamma_time, sum_log_gamma_loop_time, sum_log_gamma_recursive_time)
require(ggplot2)
ggplot(df, aes(numbers)) +
geom_line(aes(y=sum_lgamma_time), colour="red") +  # first layer
geom_line(aes(y=sum_log_gamma_loop_time), colour="green") +  # second layer
geom_line(aes(y=sum_log_gamma_recursive_time), colour="blue") + # third layer
ylab(label = "Time (sec)") +
xlab(label = "Number (N)")
